import streamlit as st
import pandas as pd
import numpy as np
from sentence_transformers import SentenceTransformer
from sklearn.metrics.pairwise import cosine_similarity

# Load model v·ªõi cache (cho ph√©p output mutation)
@st.cache(allow_output_mutation=True)
def load_model():
    return SentenceTransformer('all-MiniLM-L6-v2')

# Load d·ªØ li·ªáu s·∫£n ph·∫©m t·ª´ file Excel
@st.cache_data
def load_data():
    return pd.read_excel("data.xlsx")  # ƒê·∫£m b·∫£o file Excel n·∫±m c√πng th∆∞ m·ª•c

# T√≠nh embeddings cho danh s√°ch m√¥ t·∫£ s·∫£n ph·∫©m, b·ªè qua vi·ªác hash ƒë·ªëi s·ªë _model
@st.cache_data
def compute_embeddings(descriptions, _model):
    return _model.encode(descriptions)

# Load model v√† d·ªØ li·ªáu
model = load_model()
df = load_data()
descriptions = df["Description"].tolist()

# T√≠nh embeddings cho to√†n b·ªô m√¥ t·∫£ s·∫£n ph·∫©m
embeddings = compute_embeddings(descriptions, model)

st.title("ü§ñ Chatbot T√¨m Ki·∫øm S·∫£n Ph·∫©m - Mecsu.vn (Vector Search - Top 10 Grid)")
user_input = st.text_input("Nh·∫≠p t·ª´ kh√≥a s·∫£n ph·∫©m c·∫ßn t√¨m:")

if user_input:
    with st.spinner("üí¨ ƒêang x·ª≠ l√Ω truy v·∫•n..."):
        # T√≠nh embedding cho truy v·∫•n ng∆∞·ªùi d√πng
        query_embedding = model.encode([user_input])
        # T√≠nh cosine similarity gi·ªØa query v√† embeddings c·ªßa s·∫£n ph·∫©m
        similarities = cosine_similarity(query_embedding, embeddings)[0]
        # L·∫•y ch·ªâ s·ªë c·ªßa 10 s·∫£n ph·∫©m c√≥ ƒë·ªô t∆∞∆°ng ƒë·ªìng cao nh·∫•t
        top_n = 10
        top_indices = np.argsort(similarities)[::-1][:top_n]
    
    st.markdown("### K·∫øt qu·∫£ t√¨m ki·∫øm:")
    # Hi·ªÉn th·ªã k·∫øt qu·∫£ theo grid: 5 s·∫£n ph·∫©m tr√™n 1 h√†ng (2 h√†ng t·ªïng c·ªông 10 s·∫£n ph·∫©m)
    for i in range(0, len(top_indices), 5):
        cols = st.columns(5)
        for j, idx in enumerate(top_indices[i:i+5]):
            sp = df.iloc[idx]
            score = similarities[idx]
            # ƒê√≥ng g√≥i k·∫øt qu·∫£ trong m·ªôt div v·ªõi font nh·ªè
            html = f"""
            <div style="font-size:12px; margin:5px;">
                <strong>M√¥ t·∫£:</strong> {sp['Description']}<br>
                <strong>M√£ h√†ng:</strong> {sp['Part Number']}<br>
                <strong>Link:</strong> <a href="{sp['Link']}" target="_blank">Xem s·∫£n ph·∫©m</a><br>
                <strong>ƒê·ªô t∆∞∆°ng ƒë·ªìng:</strong> {score:.2f}
            </div>
            """
            with cols[j]:
                st.markdown(html, unsafe_allow_html=True)
